name: Test

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/FUNDING.YML'
      - '.github/dependabot.yml'
      - '.github/*.md'
      - '**/*.md'
      - '.gitconfig'
      - '.gitignore'
      - '.npmignore'
      - '*LICENSE*.*'
      - 'LICENSE'
      - '.idea/**'
      - '.vscode/**'
      - 'README.md'
      - 'appveyor.yml'
      - 'how_to_build.txt'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: test-${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
          os: [ ubuntu-22.04, ubuntu-22.04-arm, windows-2025, windows-11-arm, macos-13, macos-15 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: '8.0.x'

      - if: runner.os == 'Linux'
        name: "Setup Mono"
        run: |
            sudo apt -q install mono-complete pkg-config libglib2.0-dev

      - if: runner.os == 'macOS'
        name: Setup Mono
        shell: bash
        run: |
            brew install mono --overwrite
            brew reinstall pkg-config

      - name: Cache NuGet Packages
        id: nuget-packages
        uses: actions/cache@v3
        env:
            cache-name: nuget-package-cache
        with:
            path: ~/.nuget/packages
            key: ${{ matrix.os }}-nuget-package-cache

      - name: Test
        run: |
            dotnet test
            --configuration Release
            --logger "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true"

      - if: runner.os == 'Windows'
        name: "Package"
        shell: pwsh
        run: .\build.ps1 --target=Package-NuGet

      - if: runner.os == 'Linux' || runner.os == 'macOS'
        name: "Package"
        shell: bash
        run: ./build.sh --target=Package-NuGet

      - name: Upload nuget packages
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages-${{ matrix.os }}
          path: build/nuget/*.nupkg

      - name: Upload test summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: test-summary (Nancy ${{ matrix.os }})
            path: test/*.Tests/TestResults/TestResults*.xml

#  publish-test-summary:
#    name: "publish test-summary"
#    needs: test
#    runs-on: ubuntu-latest
#    permissions:
#      checks: write
#      pull-requests: write
#
#    if: always()
#
#    steps:
#      - name: Download Artifacts
#        uses: actions/download-artifact@v4
#        with:
#          path: artifacts
#
#      - name: publish test-summary
#        uses: EnricoMi/publish-unit-test-result-action@v2
#        with:
#          check_run_annotations: 'none'
#          check_name: 'test-summary'
#          files: "artifacts/**/*.xml"
